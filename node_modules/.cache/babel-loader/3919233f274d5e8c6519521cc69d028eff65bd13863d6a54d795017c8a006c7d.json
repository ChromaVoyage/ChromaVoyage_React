{"ast":null,"code":"var _jsxFileName = \"/Users/esthrelar/Documents/Programming/TGthon/ChromaVoyage_React/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n// import Nav from './components/NavBar/Nav';\nimport Main from './components/Main/Main';\nimport LoginPage from './components/LoginPage/LoginPage';\n// import Tab1 from './components/Tab1/Tab1';\n// import Tab2 from './components/Tab2/Tab2';\n// import Tab1_DS from './components/Tab1_DS/Tab1_DS';\n// import Tab2_DS from './components/Tab2_DS/Tab2_DS';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const [isTab1Open, setIsTab1Open] = useState(false);\n  // const [isTab2Open, setIsTab2Open] = useState(false);\n\n  // const handleToggleTab = () => {\n  //   if (!isTab1Open && !isTab2Open) {\n  //     // If no tab is open, open Tab1\n  //     setIsTab1Open(true);\n  //   } else if (isTab1Open && !isTab2Open) {\n  //     // If Tab1 is open, toggle between Tab1 and Tab2\n  //     setIsTab1Open(!isTab1Open);\n  //     // setIsTab2Open(!isTab2Open);\n  //   } else if (isTab1Open && isTab2Open) {\n  //     setIsTab1Open(true);\n  //     setIsTab2Open(false);\n  //   }\n  //   //Tab2는 버튼 조작으로 열리지 않고, Tab1 내부의 특정 동작에 의해 열림.\n  // };\n\n  // // Tab1에서 Tab2를 열기 위한 함수\n  // const handleOpenTab2 = () => {\n  //   setIsTab2Open(true);\n  // };\n\n  // //DS (District Selected 시)\n  // const [isTab1_DSOpen, setIsTab1_DSOpen] = useState(false);\n  // const [isTab2_DSOpen, setIsTab2_DSOpen] = useState(false);\n\n  // const handleToggleTab_DS = () => {\n  //   if (!isTab1_DSOpen && !isTab2_DSOpen) {\n  //     // If no tab is open, open Tab1\n  //     setIsTab1_DSOpen(true);\n  //   } else if (isTab1_DSOpen && !isTab2_DSOpen) {\n  //     // If Tab1 is open, toggle between Tab1 and Tab2\n  //     setIsTab1_DSOpen(!isTab1_DSOpen);\n  //     // setIsTab2Open(!isTab2Open);\n  //   } else if (isTab1_DSOpen && isTab2_DSOpen) {\n  //     setIsTab1_DSOpen(true);\n  //     setIsTab2_DSOpen(false);\n  //   }\n  //   //Tab2는 버튼 조작으로 열리지 않고, Tab1 내부의 특정 동작에 의해 열림.\n  // };\n\n  // // Tab1에서 Tab2를 열기 위한 함수\n  // const handleOpenTab2_DS = () => {\n  //   setIsTab2_DSOpen(true);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Routes","Route","Main","LoginPage","jsxDEV","_jsxDEV","App","children","className","path","exact","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/esthrelar/Documents/Programming/TGthon/ChromaVoyage_React/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n// import Nav from './components/NavBar/Nav';\nimport Main from './components/Main/Main';\nimport LoginPage from './components/LoginPage/LoginPage';\n// import Tab1 from './components/Tab1/Tab1';\n// import Tab2 from './components/Tab2/Tab2';\n// import Tab1_DS from './components/Tab1_DS/Tab1_DS';\n// import Tab2_DS from './components/Tab2_DS/Tab2_DS';\n\nfunction App() {\n  // const [isTab1Open, setIsTab1Open] = useState(false);\n  // const [isTab2Open, setIsTab2Open] = useState(false);\n\n  // const handleToggleTab = () => {\n  //   if (!isTab1Open && !isTab2Open) {\n  //     // If no tab is open, open Tab1\n  //     setIsTab1Open(true);\n  //   } else if (isTab1Open && !isTab2Open) {\n  //     // If Tab1 is open, toggle between Tab1 and Tab2\n  //     setIsTab1Open(!isTab1Open);\n  //     // setIsTab2Open(!isTab2Open);\n  //   } else if (isTab1Open && isTab2Open) {\n  //     setIsTab1Open(true);\n  //     setIsTab2Open(false);\n  //   }\n  //   //Tab2는 버튼 조작으로 열리지 않고, Tab1 내부의 특정 동작에 의해 열림.\n  // };\n\n  // // Tab1에서 Tab2를 열기 위한 함수\n  // const handleOpenTab2 = () => {\n  //   setIsTab2Open(true);\n  // };\n\n\n  // //DS (District Selected 시)\n  // const [isTab1_DSOpen, setIsTab1_DSOpen] = useState(false);\n  // const [isTab2_DSOpen, setIsTab2_DSOpen] = useState(false);\n\n  // const handleToggleTab_DS = () => {\n  //   if (!isTab1_DSOpen && !isTab2_DSOpen) {\n  //     // If no tab is open, open Tab1\n  //     setIsTab1_DSOpen(true);\n  //   } else if (isTab1_DSOpen && !isTab2_DSOpen) {\n  //     // If Tab1 is open, toggle between Tab1 and Tab2\n  //     setIsTab1_DSOpen(!isTab1_DSOpen);\n  //     // setIsTab2Open(!isTab2Open);\n  //   } else if (isTab1_DSOpen && isTab2_DSOpen) {\n  //     setIsTab1_DSOpen(true);\n  //     setIsTab2_DSOpen(false);\n  //   }\n  //   //Tab2는 버튼 조작으로 열리지 않고, Tab1 내부의 특정 동작에 의해 열림.\n  // };\n\n  // // Tab1에서 Tab2를 열기 위한 함수\n  // const handleOpenTab2_DS = () => {\n  //   setIsTab2_DSOpen(true);\n  // };\n\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        {/* <Nav /> */}\n\n        {/* <div className=\"tabContainer\">\n        <Nav /> */}\n\n        {/* Tab Component */}\n        {/* {isTab1Open && <Tab1 openTab2={handleOpenTab2} isTab2Open={isTab2Open} />}\n        {isTab2Open && <Tab2 />} */}\n        \n        {/* DS */}\n        {/* {isTab1_DSOpen && <Tab1_DS openTab2_DS={handleOpenTab2_DS} isTab2_DSOpen={isTab2_DSOpen} />}\n        {isTab2_DSOpen && <Tab2_DS />} */}\n        \n        {/* Button to show/hide the tab */}\n        {/* <button className=\"showTabButton\" onClick={handleToggleTab}>\n          <b>{isTab1Open ? '<' : '>'}</b>\n        </button> */}\n\n        {/* DS */}\n        {/* <button className=\"showTabButton\" onClick={handleToggleTab_DS}>\n          <b>{isTab1_DSOpen ? '<' : '>'}</b>\n        </button> */}\n\n        {/* </div> */}\n        \n\n        <Routes>\n          <Route path=\"/\" exact element={<Main />}/>\n          <Route path=\"/login\" exact element={<LoginPage />}/>\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D;AACA,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,SAAS,MAAM,kCAAkC;AACxD;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EACb;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAGA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAGA,oBACED,OAAA,CAACN,aAAa;IAAAQ,QAAA,eACZF,OAAA;MAAKG,SAAS,EAAC,KAAK;MAAAD,QAAA,eA2BlBF,OAAA,CAACL,MAAM;QAAAO,QAAA,gBACLF,OAAA,CAACJ,KAAK;UAACQ,IAAI,EAAC,GAAG;UAACC,KAAK;UAACC,OAAO,eAAEN,OAAA,CAACH,IAAI;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC1CV,OAAA,CAACJ,KAAK;UAACQ,IAAI,EAAC,QAAQ;UAACC,KAAK;UAACC,OAAO,eAAEN,OAAA,CAACF,SAAS;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEpB;AAACC,EAAA,GAtFQV,GAAG;AAwFZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}