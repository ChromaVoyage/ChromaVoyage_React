{"ast":null,"code":"var _jsxFileName = \"/Users/esthrelar/Documents/Programming/TGthon/ChromaVoyage_React/src/components/Tab2/Tab2.js\",\n  _s = $RefreshSig$();\n// Tab2.js\nimport React, { useState } from 'react';\nimport './Tab2.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './DatePicker.css';\nimport DaumPostcode from 'react-daum-postcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tab2() {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedAddress, setSelectedAddress] = useState('');\n  const [showDaumPostcode, setShowDaumPostcode] = useState(false); // 추가: Daum 우편번호 팝업 노출 여부 상태 변수\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const handleAddress = data => {\n    setSelectedAddress(data.address);\n    setShowDaumPostcode(false); // 팝업이 닫히도록 설정\n  };\n\n  const handleAddressInputClick = () => {\n    setShowDaumPostcode(true); // 주소 입력란 클릭 시 팝업을 띄우도록 설정\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Tab2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tab2Item\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"\\uC77C\\uC815 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tab2Contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Tab2Text\",\n          children: \"\\uBC29\\uBB38 \\uC77C\\uC815\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: selectedDate,\n          onChange: handleDateChange,\n          placeholderText: \"YYMMDD \\uD615\\uC2DD\\uC73C\\uB85C \\uC785\\uB825 (ex. 230713)\",\n          dateFormat: \"yyMMdd\",\n          className: \"Tab2Textbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tab2Item\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"\\uC9C0\\uC5ED \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Tab2Text\",\n        onClick: handleAddressInputClick,\n        children: \"\\uC9C0\\uB3C4\\uC5D0\\uC11C \\uC120\\uD0DD or \\uB3C4\\uB85C\\uBA85 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), showDaumPostcode && /*#__PURE__*/_jsxDEV(DaumPostcode, {\n        onComplete: handleAddress,\n        placeholderText: \" \",\n        className: \"Tab2Textbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Tab2, \"+el8ca1sswvbvm+WCDdLxHhkvtc=\");\n_c = Tab2;\nexport default Tab2;\n\n// import React, { useState } from 'react';\n// import './Tab2.css'; // CSS 파일을 추가해줍니다.\n// import DatePicker from 'react-datepicker';\n// import 'react-datepicker/dist/react-datepicker.css';\n// import './DatePicker.css'; \n// import DaumPostcode from 'react-daum-postcode';\n\n// function Tab2() {\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [selectedAddress, setSelectedAddress] = useState('');\n//   const [showDaumPostcode, setShowDaumPostcode] = useState(false); // 추가: Daum 우편번호 팝업 노출 여부 상태 변수\n\n//   const handleDateChange = (date) => {\n//     setSelectedDate(date);\n//   };\n\n//   // Function to handle the selected address from Daum Postcode\n//   const handleAddress = (data) => {\n//     setSelectedAddress(data.address); // Update the selectedAddress state with the selected address\n//   };\n\n//   const handleAddressInputClick = () => {\n//     setShowDaumPostcode(true); // 주소 입력란 클릭 시 팝업을 띄우도록 설정\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"Tab2\">\n//       {/* 사이드 메뉴 아이템들을 추가합니다 */}\n//       <div className=\"Tab2Item\"><b>일정 추가</b></div>\n\n//       <div className=\"Tab2Contents\">\n//         <span className=\"Tab2Text\">방문 일정을 선택하세요.</span>\n//         {/* <input type=\"text\" className=\"Tab2Textbox\" placeholder=\"YYMMDD 형식으로 입력 (ex. 230713)\" /> */}\n\n//         {/* 달력 컴포넌트 */}\n//         <DatePicker\n//             selected={selectedDate}\n//             onChange={handleDateChange}\n//             placeholderText=\"YYMMDD 형식으로 입력 (ex. 230713)\"\n//             dateFormat=\"yyMMdd\"\n//             className=\"Tab2Textbox\" // 텍스트 박스와 같은 스타일을 공유하기 위해 className 설정\n//           />\n\n//       </div>\n\n//       <div className=\"Tab2Item\"><b>지역 추가</b></div>\n//       <span className=\"Tab2Text\" onClick={handleAddressInputClick}/>>지도에서 선택 or 도로명 주소를 입력하세요.</span>\n//       {/* <input type=\"text\" className=\"Tab2Textbox\" onClick={handleAddressInputClick}/> */}\n\n//       {/* Daum Postcode component */}\n//       {showDaumPostcode && (\n//           <DaumPostcode\n//             onComplete={handleAddress}\n//             placeholderText=\" \"\n//             className=\"Tab2Textbox\"\n//           />\n//         )}\n\n//     </div>\n//     </div>\n//   )\n// }\n\n// export default Tab2\nvar _c;\n$RefreshReg$(_c, \"Tab2\");","map":{"version":3,"names":["React","useState","DatePicker","DaumPostcode","jsxDEV","_jsxDEV","Tab2","_s","selectedDate","setSelectedDate","selectedAddress","setSelectedAddress","showDaumPostcode","setShowDaumPostcode","handleDateChange","date","handleAddress","data","address","handleAddressInputClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","placeholderText","dateFormat","onClick","onComplete","_c","$RefreshReg$"],"sources":["/Users/esthrelar/Documents/Programming/TGthon/ChromaVoyage_React/src/components/Tab2/Tab2.js"],"sourcesContent":["// Tab2.js\nimport React, { useState } from 'react';\nimport './Tab2.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './DatePicker.css';\nimport DaumPostcode from 'react-daum-postcode';\n\nfunction Tab2() {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedAddress, setSelectedAddress] = useState('');\n  const [showDaumPostcode, setShowDaumPostcode] = useState(false); // 추가: Daum 우편번호 팝업 노출 여부 상태 변수\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleAddress = (data) => {\n    setSelectedAddress(data.address);\n    setShowDaumPostcode(false); // 팝업이 닫히도록 설정\n  };\n\n  const handleAddressInputClick = () => {\n    setShowDaumPostcode(true); // 주소 입력란 클릭 시 팝업을 띄우도록 설정\n  };\n\n  return (\n    <div>\n      <div className=\"Tab2\">\n        <div className=\"Tab2Item\"><b>일정 추가</b></div>\n\n        <div className=\"Tab2Contents\">\n          <span className=\"Tab2Text\">방문 일정을 선택하세요.</span>\n          <DatePicker\n            selected={selectedDate}\n            onChange={handleDateChange}\n            placeholderText=\"YYMMDD 형식으로 입력 (ex. 230713)\"\n            dateFormat=\"yyMMdd\"\n            className=\"Tab2Textbox\"\n          />\n\n        </div>\n\n        <div className=\"Tab2Item\"><b>지역 추가</b></div>\n        <span className=\"Tab2Text\" onClick={handleAddressInputClick}>지도에서 선택 or 도로명 주소를 입력하세요.</span>\n\n        {/* Daum Postcode component */}\n        {showDaumPostcode && (\n          <DaumPostcode\n            onComplete={handleAddress}\n            placeholderText=\" \"\n            className=\"Tab2Textbox\"\n          />\n        )}\n\n      </div>\n    </div>\n  )\n}\n\nexport default Tab2;\n\n\n// import React, { useState } from 'react';\n// import './Tab2.css'; // CSS 파일을 추가해줍니다.\n// import DatePicker from 'react-datepicker';\n// import 'react-datepicker/dist/react-datepicker.css';\n// import './DatePicker.css'; \n// import DaumPostcode from 'react-daum-postcode';\n\n// function Tab2() {\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [selectedAddress, setSelectedAddress] = useState('');\n//   const [showDaumPostcode, setShowDaumPostcode] = useState(false); // 추가: Daum 우편번호 팝업 노출 여부 상태 변수\n\n//   const handleDateChange = (date) => {\n//     setSelectedDate(date);\n//   };\n\n//   // Function to handle the selected address from Daum Postcode\n//   const handleAddress = (data) => {\n//     setSelectedAddress(data.address); // Update the selectedAddress state with the selected address\n//   };\n\n//   const handleAddressInputClick = () => {\n//     setShowDaumPostcode(true); // 주소 입력란 클릭 시 팝업을 띄우도록 설정\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"Tab2\">\n//       {/* 사이드 메뉴 아이템들을 추가합니다 */}\n//       <div className=\"Tab2Item\"><b>일정 추가</b></div>\n      \n//       <div className=\"Tab2Contents\">\n//         <span className=\"Tab2Text\">방문 일정을 선택하세요.</span>\n//         {/* <input type=\"text\" className=\"Tab2Textbox\" placeholder=\"YYMMDD 형식으로 입력 (ex. 230713)\" /> */}\n\n//         {/* 달력 컴포넌트 */}\n//         <DatePicker\n//             selected={selectedDate}\n//             onChange={handleDateChange}\n//             placeholderText=\"YYMMDD 형식으로 입력 (ex. 230713)\"\n//             dateFormat=\"yyMMdd\"\n//             className=\"Tab2Textbox\" // 텍스트 박스와 같은 스타일을 공유하기 위해 className 설정\n//           />\n\n//       </div>\n\n//       <div className=\"Tab2Item\"><b>지역 추가</b></div>\n//       <span className=\"Tab2Text\" onClick={handleAddressInputClick}/>>지도에서 선택 or 도로명 주소를 입력하세요.</span>\n//       {/* <input type=\"text\" className=\"Tab2Textbox\" onClick={handleAddressInputClick}/> */}\n      \n//       {/* Daum Postcode component */}\n//       {showDaumPostcode && (\n//           <DaumPostcode\n//             onComplete={handleAddress}\n//             placeholderText=\" \"\n//             className=\"Tab2Textbox\"\n//           />\n//         )}\n      \n//     </div>\n//     </div>\n//   )\n// }\n\n// export default Tab2\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}