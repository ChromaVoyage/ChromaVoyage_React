{"ast":null,"code":"var _jsxFileName = \"/Users/esthrelar/Documents/Programming/TGthon/ChromaVoyage_React/src/components/Main/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Main.css';\nimport Nav from '../NavBar/Nav';\nimport Tab1 from '../Tab1/Tab1';\nimport Tab2 from '../Tab2/Tab2';\nimport Tab1_DS from '../Tab1_DS/Tab1_DS';\nimport Tab2_DS from '../Tab2_DS/Tab2_DS';\nimport KakaoMap2 from '../../KakaoMap2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [isTab1Open, setIsTab1Open] = useState(false);\n  const [isTab2Open, setIsTab2Open] = useState(false);\n\n  // Tab1에서 Tab2를 열기 위한 함수\n  const handleOpenTab2 = groupData => {\n    setIsTab2Open(true);\n  };\n\n  //DS (District Selected 시)\n  const [isTab1_DSOpen, setIsTab1_DSOpen] = useState(false);\n  const [isTab2_DSOpen, setIsTab2_DSOpen] = useState(false);\n\n  // Tab1에서 Tab2를 열기 위한 함수\n  const handleOpenTab2_DS = () => {\n    setIsTab2_DSOpen(true);\n  };\n  const handleToggleTabs = () => {\n    // Toggle Tab1 state\n    setIsTab1Open(prevTab1Open => !prevTab1Open);\n\n    // Close Tab2 if it's open\n    if (isTab2Open) {\n      setIsTab2Open(false);\n    }\n\n    // Toggle Tab1_DS state\n    setIsTab1_DSOpen(prevTab1_DSOpen => !prevTab1_DSOpen);\n\n    // Close Tab2_DS if it's open\n    if (isTab2_DSOpen) {\n      setIsTab2_DSOpen(false);\n    }\n  };\n  const [isKakaoMapClick, setIsKakaoMapClick] = useState(false);\n\n  // 카카오 맵 클릭 이벤트를 처리하는 함수\n  const handleKakaoMapClick = () => {\n    if (isTab1_DSOpen) {\n      setIsTab1_DSOpen(false);\n      setIsKakaoMapClick(false);\n    } else {\n      setIsTab1_DSOpen(true);\n      setIsKakaoMapClick(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), isTab1Open && /*#__PURE__*/_jsxDEV(Tab1, {\n        openTab2: handleOpenTab2,\n        isTab1Open: isTab1Open,\n        isTab2Open: isTab2Open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 24\n      }, this), isTab2Open && /*#__PURE__*/_jsxDEV(Tab2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"showTabButton\",\n        onClick: handleToggleTabs,\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: isTab1Open || isTab1_DSOpen ? '<' : '>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(KakaoMap2, {\n        onKakaoMapClick: handleKakaoMapClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"c88IgT4zmw7LYNiwyUWgOstt+xw=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","Nav","Tab1","Tab2","Tab1_DS","Tab2_DS","KakaoMap2","jsxDEV","_jsxDEV","Main","_s","isTab1Open","setIsTab1Open","isTab2Open","setIsTab2Open","handleOpenTab2","groupData","isTab1_DSOpen","setIsTab1_DSOpen","isTab2_DSOpen","setIsTab2_DSOpen","handleOpenTab2_DS","handleToggleTabs","prevTab1Open","prevTab1_DSOpen","isKakaoMapClick","setIsKakaoMapClick","handleKakaoMapClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","openTab2","onClick","onKakaoMapClick","_c","$RefreshReg$"],"sources":["/Users/esthrelar/Documents/Programming/TGthon/ChromaVoyage_React/src/components/Main/Main.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './Main.css';\nimport Nav from '../NavBar/Nav';\nimport Tab1 from '../Tab1/Tab1';\nimport Tab2 from '../Tab2/Tab2';\nimport Tab1_DS from '../Tab1_DS/Tab1_DS';\nimport Tab2_DS from '../Tab2_DS/Tab2_DS';\nimport KakaoMap2 from '../../KakaoMap2';\n\n\nfunction Main() {\n  const [isTab1Open, setIsTab1Open] = useState(false);\n  const [isTab2Open, setIsTab2Open] = useState(false);\n\n  // Tab1에서 Tab2를 열기 위한 함수\n  const handleOpenTab2 = (groupData) => {\n    setIsTab2Open(true);\n  };\n\n\n  //DS (District Selected 시)\n  const [isTab1_DSOpen, setIsTab1_DSOpen] = useState(false);\n  const [isTab2_DSOpen, setIsTab2_DSOpen] = useState(false);\n\n  // Tab1에서 Tab2를 열기 위한 함수\n  const handleOpenTab2_DS = () => {\n    setIsTab2_DSOpen(true);\n  };\n\n  const handleToggleTabs = () => {\n    // Toggle Tab1 state\n    setIsTab1Open((prevTab1Open) => !prevTab1Open);\n  \n    // Close Tab2 if it's open\n    if (isTab2Open) {\n      setIsTab2Open(false);\n    }\n  \n    // Toggle Tab1_DS state\n    setIsTab1_DSOpen((prevTab1_DSOpen) => !prevTab1_DSOpen);\n  \n    // Close Tab2_DS if it's open\n    if (isTab2_DSOpen) {\n      setIsTab2_DSOpen(false);\n    }\n  };\n\n  const [isKakaoMapClick, setIsKakaoMapClick] = useState(false);\n\n  // 카카오 맵 클릭 이벤트를 처리하는 함수\n  const handleKakaoMapClick = () => {\n    if (isTab1_DSOpen) {\n      setIsTab1_DSOpen(false);\n      setIsKakaoMapClick(false);\n    } else {\n      setIsTab1_DSOpen(true);\n      setIsKakaoMapClick(true);\n    }\n\n  };\n\n\n  return (\n    <div className=\"Main\">\n      <div className=\"tabContainer\">\n        <Nav />\n\n        {/* Tab Component */}\n        {isTab1Open && <Tab1 openTab2={handleOpenTab2} isTab1Open={isTab1Open} isTab2Open={isTab2Open} />}\n        {isTab2Open && <Tab2 />}\n\n        {/* DS */}\n        {/* {isTab1_DSOpen && <Tab1_DS openTab2_DS={handleOpenTab2_DS} isTab2_DSOpen={isTab2_DSOpen} />}\n        {isTab2_DSOpen && <Tab2_DS />} */}\n\n        {/* Button to show/hide the tab */}\n        <button className=\"showTabButton\" onClick={handleToggleTabs}>\n          <b>{isTab1Open || isTab1_DSOpen ? '<' : '>'}</b>\n        </button>\n\n        {/* DS */}\n        {/* <button className=\"showTabButton\" onClick={handleToggleTab_DS}>\n          <b>{isTab1_DSOpen ? '<' : '>'}</b>\n        </button> */}\n\n      </div> {/* end of tab container */}\n\n      <div>\n        {/* handleKakaoMapClick 함수를 prop으로 전달 */}\n        <KakaoMap2 onKakaoMapClick={handleKakaoMapClick} />\n      </div>\n\n    </div>\n  )\n}\n\nexport default Main\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AACnB,OAAOC,GAAG,MAAM,eAAe;AAC/B,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,SAAS,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMe,cAAc,GAAIC,SAAS,IAAK;IACpCF,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;;EAGD;EACA,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACA,MAAMqB,iBAAiB,GAAGA,CAAA,KAAM;IAC9BD,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACAV,aAAa,CAAEW,YAAY,IAAK,CAACA,YAAY,CAAC;;IAE9C;IACA,IAAIV,UAAU,EAAE;MACdC,aAAa,CAAC,KAAK,CAAC;IACtB;;IAEA;IACAI,gBAAgB,CAAEM,eAAe,IAAK,CAACA,eAAe,CAAC;;IAEvD;IACA,IAAIL,aAAa,EAAE;MACjBC,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC;EAED,MAAM,CAACK,eAAe,EAAEC,kBAAkB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACA,MAAM2B,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIV,aAAa,EAAE;MACjBC,gBAAgB,CAAC,KAAK,CAAC;MACvBQ,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,MAAM;MACLR,gBAAgB,CAAC,IAAI,CAAC;MACtBQ,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EAEF,CAAC;EAGD,oBACElB,OAAA;IAAKoB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBrB,OAAA;MAAKoB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BrB,OAAA,CAACP,GAAG;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAGNtB,UAAU,iBAAIH,OAAA,CAACN,IAAI;QAACgC,QAAQ,EAAEnB,cAAe;QAACJ,UAAU,EAAEA,UAAW;QAACE,UAAU,EAAEA;MAAW;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAChGpB,UAAU,iBAAIL,OAAA,CAACL,IAAI;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAOvBzB,OAAA;QAAQoB,SAAS,EAAC,eAAe;QAACO,OAAO,EAAEb,gBAAiB;QAAAO,QAAA,eAC1DrB,OAAA;UAAAqB,QAAA,EAAIlB,UAAU,IAAIM,aAAa,GAAG,GAAG,GAAG;QAAG;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAON,CAAC,KAAC,eAEPzB,OAAA;MAAAqB,QAAA,eAEErB,OAAA,CAACF,SAAS;QAAC8B,eAAe,EAAET;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV;AAACvB,EAAA,CApFQD,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAsFb,eAAeA,IAAI;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}