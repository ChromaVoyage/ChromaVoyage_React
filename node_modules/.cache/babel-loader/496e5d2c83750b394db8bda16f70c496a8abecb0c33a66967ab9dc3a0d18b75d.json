{"ast":null,"code":"var _jsxFileName = \"/Users/esthrelar/Documents/Programming/TGthon/ChromaVoyage_React/src/components/Main/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport './Main.css';\nimport Nav from '../NavBar/Nav';\nimport Tab1 from '../Tab1/Tab1';\nimport Tab2 from '../Tab2/Tab2';\nimport Tab1_DS from '../Tab1_DS/Tab1_DS';\nimport Tab2_DS from '../Tab2_DS/Tab2_DS';\nimport KakaoMap2 from '../../KakaoMap2';\nimport { MyContext } from '../../MyContextProvider'; // import the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const {\n    selectedLocations\n  } = useContext(MyContext); // Get the selectedLocations from the context\n\n  const [isTab1Open, setIsTab1Open] = useState(false);\n  const [isTab2Open, setIsTab2Open] = useState(false);\n\n  //DS (District Selected 시)\n  const [isTab1_DSOpen, setIsTab1_DSOpen] = useState(false);\n  const [isTab2_DSOpen, setIsTab2_DSOpen] = useState(false);\n  useEffect(() => {\n    if (selectedLocations.length === 0) {\n      // 만약 selectedLocations 배열이 비어있다면\n      setIsTab1Open(true); // Tab1을 열고\n      setIsTab1_DSOpen(false); // Tab1_DS를 닫습니다.\n    } else {\n      // selectedLocations 배열에 요소가 있다면\n      setIsTab1Open(false); // Tab1을 닫고\n      setIsTab1_DSOpen(true); // Tab1_DS를 엽니다.\n    }\n  }, [selectedLocations]);\n\n  // Tab1에서 Tab2를 열기 위한 함수\n  const handleOpenTab2 = groupData => {\n    setIsTab2Open(true);\n  };\n\n  // Tab1에서 Tab2를 열기 위한 함수\n  const handleOpenTab2_DS = () => {\n    setIsTab2_DSOpen(true);\n  };\n  const handleToggleTabs = () => {\n    //Tab2는 버튼 조작으로 열리지 않고, Tab1 내부의 특정 동작에 의해 열림.\n    if (!isTab1Open && !isTab2Open && selectedLocations.length === 0) {\n      // 아무 탭도 열려있지 않고, 지도에서 지역이 선택되어 있지 않을 때 버튼을 누르면 Tab1이 뜸.\n      setIsTab1Open(true);\n    } else if (isTab1Open && !isTab2Open) {\n      // If Tab1 is open, toggle between Tab1 and Tab2\n      setIsTab1Open(!isTab1Open);\n    } else if (isTab1Open && isTab2Open) {\n      setIsTab1Open(true);\n      setIsTab2Open(false);\n    }\n    if (!isTab1_DSOpen && !isTab2_DSOpen && selectedLocations.length !== 0) {\n      // 아무 탭도 열려있지 않고, 지도에서 지역이 선택되어 있을 때 버튼을 누르면 Tab1_DS이 뜸.\n      setIsTab1_DSOpen(true);\n    } else if (isTab1_DSOpen && !isTab2_DSOpen) {\n      // If Tab1_DS is open, toggle between Tab1_DS and Tab2_DS\n      setIsTab1_DSOpen(!isTab1_DSOpen);\n    } else if (isTab1_DSOpen && isTab2_DSOpen) {\n      setIsTab1_DSOpen(true);\n      setIsTab2_DSOpen(false);\n    }\n  };\n  const [isKakaoMapClick, setIsKakaoMapClick] = useState(false);\n\n  // 카카오 맵 클릭 이벤트를 처리하는 함수\n  const handleKakaoMapClick = () => {\n    if (isTab1_DSOpen) {\n      setIsTab1_DSOpen(false);\n      setIsKakaoMapClick(false);\n    } else {\n      setIsTab1_DSOpen(true);\n      setIsKakaoMapClick(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), isTab1Open && /*#__PURE__*/_jsxDEV(Tab1, {\n        openTab2: handleOpenTab2,\n        isTab2Open: isTab2Open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 24\n      }, this), isTab2Open && /*#__PURE__*/_jsxDEV(Tab2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 24\n      }, this), isTab1_DSOpen && /*#__PURE__*/_jsxDEV(Tab1_DS, {\n        openTab2_DS: handleOpenTab2_DS,\n        isTab2_DSOpen: isTab2_DSOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 27\n      }, this), isTab2_DSOpen && /*#__PURE__*/_jsxDEV(Tab2_DS, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"showTabButton\",\n        onClick: handleToggleTabs,\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: isTab1Open || isTab1_DSOpen ? '<' : '>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(KakaoMap2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"Lcw24H3hZUkdDXNr/WWr7qFK2IQ=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useContext","Nav","Tab1","Tab2","Tab1_DS","Tab2_DS","KakaoMap2","MyContext","jsxDEV","_jsxDEV","Main","_s","selectedLocations","isTab1Open","setIsTab1Open","isTab2Open","setIsTab2Open","isTab1_DSOpen","setIsTab1_DSOpen","isTab2_DSOpen","setIsTab2_DSOpen","useEffect","length","handleOpenTab2","groupData","handleOpenTab2_DS","handleToggleTabs","isKakaoMapClick","setIsKakaoMapClick","handleKakaoMapClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","openTab2","openTab2_DS","onClick","_c","$RefreshReg$"],"sources":["/Users/esthrelar/Documents/Programming/TGthon/ChromaVoyage_React/src/components/Main/Main.js"],"sourcesContent":["import React, { useState, useContext } from 'react'\nimport './Main.css';\nimport Nav from '../NavBar/Nav';\nimport Tab1 from '../Tab1/Tab1';\nimport Tab2 from '../Tab2/Tab2';\nimport Tab1_DS from '../Tab1_DS/Tab1_DS';\nimport Tab2_DS from '../Tab2_DS/Tab2_DS';\nimport KakaoMap2 from '../../KakaoMap2';\nimport { MyContext } from '../../MyContextProvider'; // import the context\n\nfunction Main() {\n  const { selectedLocations } = useContext(MyContext); // Get the selectedLocations from the context\n\n  const [isTab1Open, setIsTab1Open] = useState(false);\n  const [isTab2Open, setIsTab2Open] = useState(false);\n\n  //DS (District Selected 시)\n  const [isTab1_DSOpen, setIsTab1_DSOpen] = useState(false);\n  const [isTab2_DSOpen, setIsTab2_DSOpen] = useState(false);\n\n  useEffect(() => {\n    if (selectedLocations.length === 0) {\n      // 만약 selectedLocations 배열이 비어있다면\n      setIsTab1Open(true); // Tab1을 열고\n      setIsTab1_DSOpen(false); // Tab1_DS를 닫습니다.\n    } else {\n      // selectedLocations 배열에 요소가 있다면\n      setIsTab1Open(false); // Tab1을 닫고\n      setIsTab1_DSOpen(true); // Tab1_DS를 엽니다.\n    }\n  }, [selectedLocations]);\n\n  // Tab1에서 Tab2를 열기 위한 함수\n  const handleOpenTab2 = (groupData) => {\n    setIsTab2Open(true);\n  };\n\n  // Tab1에서 Tab2를 열기 위한 함수\n  const handleOpenTab2_DS = () => {\n    setIsTab2_DSOpen(true);\n  };\n\n  const handleToggleTabs = () => {\n    //Tab2는 버튼 조작으로 열리지 않고, Tab1 내부의 특정 동작에 의해 열림.\n    if (!isTab1Open && !isTab2Open && selectedLocations.length === 0) { // 아무 탭도 열려있지 않고, 지도에서 지역이 선택되어 있지 않을 때 버튼을 누르면 Tab1이 뜸.\n      setIsTab1Open(true);\n    } else if (isTab1Open && !isTab2Open) {\n      // If Tab1 is open, toggle between Tab1 and Tab2\n      setIsTab1Open(!isTab1Open);\n    } else if (isTab1Open && isTab2Open) {\n      setIsTab1Open(true);\n      setIsTab2Open(false);\n    }\n\n    if (!isTab1_DSOpen && !isTab2_DSOpen && selectedLocations.length !== 0) {\n      // 아무 탭도 열려있지 않고, 지도에서 지역이 선택되어 있을 때 버튼을 누르면 Tab1_DS이 뜸.\n      setIsTab1_DSOpen(true);\n    } else if (isTab1_DSOpen && !isTab2_DSOpen) {\n      // If Tab1_DS is open, toggle between Tab1_DS and Tab2_DS\n      setIsTab1_DSOpen(!isTab1_DSOpen);\n    } else if (isTab1_DSOpen && isTab2_DSOpen) {\n      setIsTab1_DSOpen(true);\n      setIsTab2_DSOpen(false);\n    }\n  }\n\n  const [isKakaoMapClick, setIsKakaoMapClick] = useState(false);\n\n  // 카카오 맵 클릭 이벤트를 처리하는 함수\n  const handleKakaoMapClick = () => {\n    if (isTab1_DSOpen) {\n      setIsTab1_DSOpen(false);\n      setIsKakaoMapClick(false);\n    } else {\n      setIsTab1_DSOpen(true);\n      setIsKakaoMapClick(true);\n    }\n\n  };\n\n\n  return (\n    <div className=\"Main\">\n      <div className=\"tabContainer\">\n        <Nav />\n\n        {/* Tab Component */}\n        {isTab1Open && <Tab1 openTab2={handleOpenTab2} isTab2Open={isTab2Open} />}\n        {isTab2Open && <Tab2 />}\n\n        {/* DS */}\n        {isTab1_DSOpen && <Tab1_DS openTab2_DS={handleOpenTab2_DS} isTab2_DSOpen={isTab2_DSOpen} />}\n        {isTab2_DSOpen && <Tab2_DS />}\n\n        {/* Button to show/hide the tab */}\n        <button className=\"showTabButton\" onClick={handleToggleTabs}>\n          <b>{isTab1Open || isTab1_DSOpen ? '<' : '>'}</b>\n        </button>\n\n      </div> {/* end of tab container */}\n\n      <div>\n        <KakaoMap2 />\n      </div>\n\n    </div>\n  )\n}\n\nexport default Main\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAO,YAAY;AACnB,OAAOC,GAAG,MAAM,eAAe;AAC/B,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,SAAS,MAAM,iBAAiB;AACvC,SAASC,SAAS,QAAQ,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAkB,CAAC,GAAGZ,UAAU,CAACO,SAAS,CAAC,CAAC,CAAC;;EAErD,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEzDsB,SAAS,CAAC,MAAM;IACd,IAAIT,iBAAiB,CAACU,MAAM,KAAK,CAAC,EAAE;MAClC;MACAR,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;MACrBI,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3B,CAAC,MAAM;MACL;MACAJ,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;MACtBI,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,CAACN,iBAAiB,CAAC,CAAC;;EAEvB;EACA,MAAMW,cAAc,GAAIC,SAAS,IAAK;IACpCR,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMS,iBAAiB,GAAGA,CAAA,KAAM;IAC9BL,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACA,IAAI,CAACb,UAAU,IAAI,CAACE,UAAU,IAAIH,iBAAiB,CAACU,MAAM,KAAK,CAAC,EAAE;MAAE;MAClER,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM,IAAID,UAAU,IAAI,CAACE,UAAU,EAAE;MACpC;MACAD,aAAa,CAAC,CAACD,UAAU,CAAC;IAC5B,CAAC,MAAM,IAAIA,UAAU,IAAIE,UAAU,EAAE;MACnCD,aAAa,CAAC,IAAI,CAAC;MACnBE,aAAa,CAAC,KAAK,CAAC;IACtB;IAEA,IAAI,CAACC,aAAa,IAAI,CAACE,aAAa,IAAIP,iBAAiB,CAACU,MAAM,KAAK,CAAC,EAAE;MACtE;MACAJ,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,MAAM,IAAID,aAAa,IAAI,CAACE,aAAa,EAAE;MAC1C;MACAD,gBAAgB,CAAC,CAACD,aAAa,CAAC;IAClC,CAAC,MAAM,IAAIA,aAAa,IAAIE,aAAa,EAAE;MACzCD,gBAAgB,CAAC,IAAI,CAAC;MACtBE,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC;EAED,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACA,MAAM8B,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIZ,aAAa,EAAE;MACjBC,gBAAgB,CAAC,KAAK,CAAC;MACvBU,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,MAAM;MACLV,gBAAgB,CAAC,IAAI,CAAC;MACtBU,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EAEF,CAAC;EAGD,oBACEnB,OAAA;IAAKqB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBtB,OAAA;MAAKqB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BtB,OAAA,CAACR,GAAG;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAGNtB,UAAU,iBAAIJ,OAAA,CAACP,IAAI;QAACkC,QAAQ,EAAEb,cAAe;QAACR,UAAU,EAAEA;MAAW;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACxEpB,UAAU,iBAAIN,OAAA,CAACN,IAAI;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAGtBlB,aAAa,iBAAIR,OAAA,CAACL,OAAO;QAACiC,WAAW,EAAEZ,iBAAkB;QAACN,aAAa,EAAEA;MAAc;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC1FhB,aAAa,iBAAIV,OAAA,CAACJ,OAAO;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAG7B1B,OAAA;QAAQqB,SAAS,EAAC,eAAe;QAACQ,OAAO,EAAEZ,gBAAiB;QAAAK,QAAA,eAC1DtB,OAAA;UAAAsB,QAAA,EAAIlB,UAAU,IAAII,aAAa,GAAG,GAAG,GAAG;QAAG;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN,CAAC,KAAC,eAEP1B,OAAA;MAAAsB,QAAA,eACEtB,OAAA,CAACH,SAAS;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV;AAACxB,EAAA,CAjGQD,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAmGb,eAAeA,IAAI;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}