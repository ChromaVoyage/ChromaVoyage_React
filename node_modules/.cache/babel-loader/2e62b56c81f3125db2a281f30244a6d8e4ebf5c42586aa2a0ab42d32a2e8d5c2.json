{"ast":null,"code":"var _jsxFileName = \"/Users/esthrelar/Documents/Programming/TGthon/ChromaVoyage_React/src/components/Main/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Main.css';\nimport Nav from '../NavBar/Nav';\nimport Tab1 from '../Tab1/Tab1';\nimport Tab2 from '../Tab2/Tab2';\nimport Tab1_DS from '../Tab1_DS/Tab1_DS';\nimport Tab2_DS from '../Tab2_DS/Tab2_DS';\nimport KakaoMap2 from '../../KakaoMap2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [isTab1Open, setIsTab1Open] = useState(false);\n  const [isTab2Open, setIsTab2Open] = useState(false);\n  const handleToggleTab = () => {\n    if (!isTab1Open && !isTab2Open) {\n      // If no tab is open, open Tab1\n      setIsTab1Open(true);\n    } else if (isTab1Open && !isTab2Open) {\n      // If Tab1 is open, toggle between Tab1 and Tab2\n      setIsTab1Open(!isTab1Open);\n      // setIsTab2Open(!isTab2Open);\n    } else if (isTab1Open && isTab2Open) {\n      setIsTab1Open(true);\n      setIsTab2Open(false);\n    }\n    //Tab2는 버튼 조작으로 열리지 않고, Tab1 내부의 특정 동작에 의해 열림.\n  };\n\n  // Tab1에서 Tab2를 열기 위한 함수\n  const handleOpenTab2 = groupData => {\n    setIsTab2Open(true);\n  };\n\n  //DS (District Selected 시)\n  const [isTab1_DSOpen, setIsTab1_DSOpen] = useState(false);\n  const [isTab2_DSOpen, setIsTab2_DSOpen] = useState(false);\n  const handleToggleTab_DS = () => {\n    if (!isTab1_DSOpen && !isTab2_DSOpen) {\n      // If no tab is open, open Tab1\n      setIsTab1_DSOpen(true);\n    } else if (isTab1_DSOpen && !isTab2_DSOpen) {\n      // If Tab1 is open, toggle between Tab1 and Tab2\n      setIsTab1_DSOpen(!isTab1_DSOpen);\n      // setIsTab2Open(!isTab2Open);\n    } else if (isTab1_DSOpen && isTab2_DSOpen) {\n      setIsTab1_DSOpen(true);\n      setIsTab2_DSOpen(false);\n    }\n    //Tab2는 버튼 조작으로 열리지 않고, Tab1 내부의 특정 동작에 의해 열림.\n  };\n\n  // Tab1에서 Tab2를 열기 위한 함수\n  const handleOpenTab2_DS = () => {\n    setIsTab2_DSOpen(true);\n  };\n  const [isKakaoMapClick, setIsKakaoMapClick] = useState(false);\n\n  // 카카오 맵 클릭 이벤트를 처리하는 함수\n  const handleKakaoMapClick = () => {\n    if (isTab1_DSOpen) {\n      setIsTab1_DSOpen(false);\n      setIsKakaoMapClick(false);\n    } else {\n      setIsTab1_DSOpen(true);\n      setIsKakaoMapClick(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), isTab1Open && /*#__PURE__*/_jsxDEV(Tab1, {\n        openTab2: handleOpenTab2,\n        isTab1Open: isTab1Open,\n        isTab2Open: isTab2Open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 24\n      }, this), isTab2Open && /*#__PURE__*/_jsxDEV(Tab2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 24\n      }, this), isTab1_DSOpen && /*#__PURE__*/_jsxDEV(Tab1_DS, {\n        openTab2_DS: handleOpenTab2_DS,\n        isTab2_DSOpen: isTab2_DSOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 27\n      }, this), isTab2_DSOpen && /*#__PURE__*/_jsxDEV(Tab2_DS, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"showTabButton\",\n        onClick: handleToggleTab,\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: isTab1Open ? '<' : '>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"showTabButton\",\n        onClick: handleToggleTab_DS,\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: isTab1_DSOpen ? '<' : '>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(KakaoMap2, {\n        onKakaoMapClick: handleKakaoMapClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"c88IgT4zmw7LYNiwyUWgOstt+xw=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","Nav","Tab1","Tab2","Tab1_DS","Tab2_DS","KakaoMap2","jsxDEV","_jsxDEV","Main","_s","isTab1Open","setIsTab1Open","isTab2Open","setIsTab2Open","handleToggleTab","handleOpenTab2","groupData","isTab1_DSOpen","setIsTab1_DSOpen","isTab2_DSOpen","setIsTab2_DSOpen","handleToggleTab_DS","handleOpenTab2_DS","isKakaoMapClick","setIsKakaoMapClick","handleKakaoMapClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","openTab2","openTab2_DS","onClick","onKakaoMapClick","_c","$RefreshReg$"],"sources":["/Users/esthrelar/Documents/Programming/TGthon/ChromaVoyage_React/src/components/Main/Main.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './Main.css';\nimport Nav from '../NavBar/Nav';\nimport Tab1 from '../Tab1/Tab1';\nimport Tab2 from '../Tab2/Tab2';\nimport Tab1_DS from '../Tab1_DS/Tab1_DS';\nimport Tab2_DS from '../Tab2_DS/Tab2_DS';\nimport KakaoMap2 from '../../KakaoMap2';\n\n\nfunction Main() {\n  const [isTab1Open, setIsTab1Open] = useState(false);\n  const [isTab2Open, setIsTab2Open] = useState(false);\n\n  const handleToggleTab = () => {\n    if (!isTab1Open && !isTab2Open) {\n      // If no tab is open, open Tab1\n      setIsTab1Open(true);\n    } else if (isTab1Open && !isTab2Open) {\n      // If Tab1 is open, toggle between Tab1 and Tab2\n      setIsTab1Open(!isTab1Open);\n      // setIsTab2Open(!isTab2Open);\n    } else if (isTab1Open && isTab2Open) {\n      setIsTab1Open(true);\n      setIsTab2Open(false);\n    }\n    //Tab2는 버튼 조작으로 열리지 않고, Tab1 내부의 특정 동작에 의해 열림.\n  };\n\n  // Tab1에서 Tab2를 열기 위한 함수\n  const handleOpenTab2 = (groupData) => {\n    setIsTab2Open(true);\n  };\n\n\n  //DS (District Selected 시)\n  const [isTab1_DSOpen, setIsTab1_DSOpen] = useState(false);\n  const [isTab2_DSOpen, setIsTab2_DSOpen] = useState(false);\n\n  const handleToggleTab_DS = () => {\n    if (!isTab1_DSOpen && !isTab2_DSOpen) {\n      // If no tab is open, open Tab1\n      setIsTab1_DSOpen(true);\n    } else if (isTab1_DSOpen && !isTab2_DSOpen) {\n      // If Tab1 is open, toggle between Tab1 and Tab2\n      setIsTab1_DSOpen(!isTab1_DSOpen);\n      // setIsTab2Open(!isTab2Open);\n    } else if (isTab1_DSOpen && isTab2_DSOpen) {\n      setIsTab1_DSOpen(true);\n      setIsTab2_DSOpen(false);\n    }\n    //Tab2는 버튼 조작으로 열리지 않고, Tab1 내부의 특정 동작에 의해 열림.\n  };\n\n  // Tab1에서 Tab2를 열기 위한 함수\n  const handleOpenTab2_DS = () => {\n    setIsTab2_DSOpen(true);\n  };\n\n  const [isKakaoMapClick, setIsKakaoMapClick] = useState(false);\n\n  // 카카오 맵 클릭 이벤트를 처리하는 함수\n  const handleKakaoMapClick = () => {\n    if (isTab1_DSOpen) {\n      setIsTab1_DSOpen(false);\n      setIsKakaoMapClick(false);\n    } else {\n      setIsTab1_DSOpen(true);\n      setIsKakaoMapClick(true);\n    }\n\n  };\n\n\n  return (\n    <div className=\"Main\">\n      <div className=\"tabContainer\">\n        <Nav />\n\n        {/* Tab Component */}\n        {isTab1Open && <Tab1 openTab2={handleOpenTab2} isTab1Open={isTab1Open} isTab2Open={isTab2Open} />}\n        {isTab2Open && <Tab2 />}\n\n        {/* DS */}\n        {isTab1_DSOpen && <Tab1_DS openTab2_DS={handleOpenTab2_DS} isTab2_DSOpen={isTab2_DSOpen} />}\n        {isTab2_DSOpen && <Tab2_DS />}\n\n        {/* Button to show/hide the tab */}\n        <button className=\"showTabButton\" onClick={handleToggleTab}>\n          <b>{isTab1Open ? '<' : '>'}</b>\n        </button>\n\n        {/* DS */}\n        <button className=\"showTabButton\" onClick={handleToggleTab_DS}>\n          <b>{isTab1_DSOpen ? '<' : '>'}</b>\n        </button>\n\n      </div> {/* end of tab container */}\n\n      <div>\n        {/* handleKakaoMapClick 함수를 prop으로 전달 */}\n        <KakaoMap2 onKakaoMapClick={handleKakaoMapClick} />\n      </div>\n\n    </div>\n  )\n}\n\nexport default Main\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}