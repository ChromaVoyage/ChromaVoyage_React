{"ast":null,"code":"var _jsxFileName = \"/Users/esthrelar/Documents/Programming/TGthon/ChromaVoyage_React/src/components/Tab2/Tab2.js\",\n  _s = $RefreshSig$();\n// Tab2.js\nimport React, { useState, useContext, useEffect } from 'react';\nimport './Tab2.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './DatePicker.css';\nimport DaumPostcode from 'react-daum-postcode';\nimport { MyContext } from '../../MyContextProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tab2({\n  activeGroupBoxIndex\n}) {\n  _s();\n  const {\n    name,\n    selectedLocations,\n    setSelectedLocations\n  } = useContext(MyContext);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedAddress, setSelectedAddress] = useState('');\n  const [showDaumPostcode, setShowDaumPostcode] = useState(false); // 추가: Daum 우편번호 팝업 노출 여부 상태 변수\n\n  let GroupIndex = activeGroupBoxIndex;\n  console.log(\"activeGroupBoxIndex: \", activeGroupBoxIndex);\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const handleAddressChange = event => {\n    setSelectedAddress(event.target.value);\n  };\n  const handleAddress = data => {\n    setShowDaumPostcode(false); // 팝업이 닫히도록 설정\n    const fullAddress = data.address;\n    const addressArray = fullAddress.split(' '); // 주소를 공백 문자를 기준으로 분리하여 배열로 만듦\n    const guAddress = addressArray[0] + \" \" + addressArray[1]; // 구 단위 주소를 가져옴\n    setSelectedAddress(guAddress); // 구 단위 주소를 선택된 주소로 설정\n  };\n\n  const handleAddressInputClick = () => {\n    setShowDaumPostcode(true); // 주소 입력란 클릭 시 팝업을 띄우도록 설정\n  };\n\n  const handleDaumPostcodeClose = () => {\n    setShowDaumPostcode(false);\n  };\n  const handleMapButtonClick = () => {\n    // 지도에서 선택한 지역을 리스트에 추가합니다.\n    setSelectedLocations([...selectedLocations, name]);\n    console.log('지도에서 선택 버튼이 클릭되었습니다.');\n  };\n  useEffect(() => {\n    // 선택된 모든 지역을 리스트로 저장하고 화면에 출력합니다.\n    console.log('선택된 모든 지역:', selectedLocations);\n  }, [selectedLocations]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Tab2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tab2Item\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"\\uC77C\\uC815 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), activeGroupBoxIndex !== -1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tab2Item\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"\\uC120\\uD0DD\\uD55C \\uADF8\\uB8F9 \\uC778\\uB371\\uC2A4: \", activeGroupBoxIndex]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tab2Contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Tab2Text\",\n          children: \"\\uBC29\\uBB38 \\uC77C\\uC815\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: selectedDate,\n          onChange: handleDateChange,\n          placeholderText: \"YYMMDD \\uD615\\uC2DD\\uC73C\\uB85C \\uC785\\uB825 (ex. 230713)\",\n          dateFormat: \"yyMMdd\",\n          className: \"Tab2Textbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tab2Item\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"\\uC9C0\\uC5ED \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Tab2Text\",\n        children: \"\\uC9C0\\uB3C4\\uC5D0\\uC11C \\uC120\\uD0DD or \\uB3C4\\uB85C\\uBA85 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"Tab2Textbox\",\n        value: selectedAddress,\n        onChange: handleAddressChange,\n        onClick: handleAddressInputClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), showDaumPostcode && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DaumPostcode, {\n          onComplete: handleAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDaumPostcodeClose,\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: '10px'\n        },\n        children: [\"\\uC120\\uD0DD\\uB41C \\uC9C0\\uC5ED:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: selectedLocations.map((location, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: location\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMapButtonClick,\n        className: \"MapSelectButton\",\n        children: \"\\uC9C0\\uC5ED \\uCD94\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Tab2, \"O9GeDERsQ1UOcLk1wBw+DL+IAxE=\");\n_c = Tab2;\nexport default Tab2;\nvar _c;\n$RefreshReg$(_c, \"Tab2\");","map":{"version":3,"names":["React","useState","useContext","useEffect","DatePicker","DaumPostcode","MyContext","jsxDEV","_jsxDEV","Tab2","activeGroupBoxIndex","_s","name","selectedLocations","setSelectedLocations","selectedDate","setSelectedDate","selectedAddress","setSelectedAddress","showDaumPostcode","setShowDaumPostcode","GroupIndex","console","log","handleDateChange","date","handleAddressChange","event","target","value","handleAddress","data","fullAddress","address","addressArray","split","guAddress","handleAddressInputClick","handleDaumPostcodeClose","handleMapButtonClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","placeholderText","dateFormat","type","onClick","onComplete","style","paddingTop","map","location","index","_c","$RefreshReg$"],"sources":["/Users/esthrelar/Documents/Programming/TGthon/ChromaVoyage_React/src/components/Tab2/Tab2.js"],"sourcesContent":["// Tab2.js\nimport React, { useState, useContext, useEffect } from 'react';\nimport './Tab2.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './DatePicker.css';\nimport DaumPostcode from 'react-daum-postcode';\nimport { MyContext } from '../../MyContextProvider';\n\nfunction Tab2({ activeGroupBoxIndex }) {\n  const { name, selectedLocations, setSelectedLocations } = useContext(MyContext);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedAddress, setSelectedAddress] = useState('');\n  const [showDaumPostcode, setShowDaumPostcode] = useState(false); // 추가: Daum 우편번호 팝업 노출 여부 상태 변수\n\n  let GroupIndex = activeGroupBoxIndex\n\n  console.log(\"activeGroupBoxIndex: \", activeGroupBoxIndex)\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleAddressChange = (event) => {\n    setSelectedAddress(event.target.value);\n  };\n\n  const handleAddress = (data) => {\n    setShowDaumPostcode(false); // 팝업이 닫히도록 설정\n    const fullAddress = data.address;\n    const addressArray = fullAddress.split(' '); // 주소를 공백 문자를 기준으로 분리하여 배열로 만듦\n    const guAddress = addressArray[0] + \" \" + addressArray[1]; // 구 단위 주소를 가져옴\n    setSelectedAddress(guAddress); // 구 단위 주소를 선택된 주소로 설정\n  };\n\n  const handleAddressInputClick = () => {\n    setShowDaumPostcode(true); // 주소 입력란 클릭 시 팝업을 띄우도록 설정\n  };\n\n  const handleDaumPostcodeClose = () => {\n    setShowDaumPostcode(false);\n  };\n\n  const handleMapButtonClick = () => {\n    // 지도에서 선택한 지역을 리스트에 추가합니다.\n    setSelectedLocations([...selectedLocations, name]);\n    console.log('지도에서 선택 버튼이 클릭되었습니다.');\n  };\n\n  useEffect(() => {\n    // 선택된 모든 지역을 리스트로 저장하고 화면에 출력합니다.\n    console.log('선택된 모든 지역:', selectedLocations);\n  }, [selectedLocations]);\n\n  return (\n    <div>\n      <div className=\"Tab2\">\n        <div className=\"Tab2Item\"><b>일정 추가</b></div>\n\n        {/* \"일정 추가\" 문구 다음 줄에 activeGroupBoxIndex 값 표시 */}\n        {activeGroupBoxIndex !== -1 && (\n          <div className=\"Tab2Item\"><b>선택한 그룹 인덱스: {activeGroupBoxIndex}</b></div>\n        )}\n\n        <div className=\"Tab2Contents\">\n          {/* 수정: 선택된 그룹의 정보를 화면에 표시 */}\n          {/* <span className=\"Tab2Text\">선택한 그룹 이름: {activeGroupData.name}</span>\n          <span className=\"Tab2Text\">멤버: {activeGroupData.member}</span>\n          <span className=\"Tab2Text\">멤버 수: {activeGroupData.memberCount}</span> */}\n          {/* 기존 코드 */}\n          <span className=\"Tab2Text\">방문 일정을 선택하세요.</span>\n          <DatePicker\n            selected={selectedDate}\n            onChange={handleDateChange}\n            placeholderText=\"YYMMDD 형식으로 입력 (ex. 230713)\"\n            dateFormat=\"yyMMdd\"\n            className=\"Tab2Textbox\"\n          />\n        </div>\n\n        <div className=\"Tab2Item\"><b>지역 추가</b></div>\n        <span className=\"Tab2Text\">지도에서 선택 or 도로명 주소를 입력하세요.</span>\n        <input\n          type=\"text\"\n          className=\"Tab2Textbox\"\n          value={selectedAddress}\n          onChange={handleAddressChange}\n          onClick={handleAddressInputClick}\n        />\n\n        {/* Daum Postcode component */}\n        {showDaumPostcode && (\n          <div>\n            <DaumPostcode\n              onComplete={handleAddress}\n            />\n            <button onClick={handleDaumPostcodeClose}>x</button>\n          </div>\n        )}\n\n        <div style={{ paddingTop: '10px' }}>\n          선택된 지역:\n          <ul>\n            {selectedLocations.map((location, index) => (\n              <li key={index}>{location}</li>\n            ))}\n          </ul>\n        </div>\n\n        <button onClick={handleMapButtonClick} className=\"MapSelectButton\">\n          지역 추가하기\n        </button>\n\n      </div>\n    </div>\n  )\n}\n\nexport default Tab2;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}