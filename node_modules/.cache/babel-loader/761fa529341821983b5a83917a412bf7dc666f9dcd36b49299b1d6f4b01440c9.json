{"ast":null,"code":"var _jsxFileName = \"/Users/esthrelar/Documents/Programming/TGthon/ChromaVoyage_React/src/components/Tab2/Tab2.js\",\n  _s = $RefreshSig$();\n// Tab2.js\nimport React, { useState } from 'react';\nimport './Tab2.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './DatePicker.css';\nimport DaumPostcode from 'react-daum-postcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tab2() {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedAddress, setSelectedAddress] = useState('');\n  const [showDaumPostcode, setShowDaumPostcode] = useState(false); // 추가: Daum 우편번호 팝업 노출 여부 상태 변수\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const handleAddressChange = event => {\n    setSelectedAddress(event.target.value);\n  };\n  const handleAddress = data => {\n    setShowDaumPostcode(false); // 팝업이 닫히도록 설정\n    const fullAddress = data.address;\n    const addressArray = fullAddress.split(' '); // 주소를 공백 문자를 기준으로 분리하여 배열로 만듦\n    const guAddress = addressArray[1]; // 구 단위 주소를 가져옴\n    setSelectedAddress(guAddress); // 구 단위 주소를 선택된 주소로 설정\n  };\n\n  const handleAddressInputClick = () => {\n    setShowDaumPostcode(true); // 주소 입력란 클릭 시 팝업을 띄우도록 설정\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Tab2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tab2Item\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"\\uC77C\\uC815 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tab2Contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Tab2Text\",\n          children: \"\\uBC29\\uBB38 \\uC77C\\uC815\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: selectedDate,\n          onChange: handleDateChange,\n          placeholderText: \"YYMMDD \\uD615\\uC2DD\\uC73C\\uB85C \\uC785\\uB825 (ex. 230713)\",\n          dateFormat: \"yyMMdd\",\n          className: \"Tab2Textbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tab2Item\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"\\uC9C0\\uC5ED \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Tab2Text\",\n        children: \"\\uC9C0\\uB3C4\\uC5D0\\uC11C \\uC120\\uD0DD or \\uB3C4\\uB85C\\uBA85 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"Tab2Textbox\",\n        value: selectedAddress,\n        onChange: handleAddressChange,\n        onClick: handleAddressInputClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), showDaumPostcode && /*#__PURE__*/_jsxDEV(DaumPostcode, {\n        onComplete: handleAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Tab2, \"+el8ca1sswvbvm+WCDdLxHhkvtc=\");\n_c = Tab2;\nexport default Tab2;\nvar _c;\n$RefreshReg$(_c, \"Tab2\");","map":{"version":3,"names":["React","useState","DatePicker","DaumPostcode","jsxDEV","_jsxDEV","Tab2","_s","selectedDate","setSelectedDate","selectedAddress","setSelectedAddress","showDaumPostcode","setShowDaumPostcode","handleDateChange","date","handleAddressChange","event","target","value","handleAddress","data","fullAddress","address","addressArray","split","guAddress","handleAddressInputClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","placeholderText","dateFormat","type","onClick","onComplete","_c","$RefreshReg$"],"sources":["/Users/esthrelar/Documents/Programming/TGthon/ChromaVoyage_React/src/components/Tab2/Tab2.js"],"sourcesContent":["// Tab2.js\nimport React, { useState } from 'react';\nimport './Tab2.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './DatePicker.css';\nimport DaumPostcode from 'react-daum-postcode';\n\nfunction Tab2() {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedAddress, setSelectedAddress] = useState('');\n  const [showDaumPostcode, setShowDaumPostcode] = useState(false); // 추가: Daum 우편번호 팝업 노출 여부 상태 변수\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleAddressChange = (event) => {\n    setSelectedAddress(event.target.value);\n  };\n\n  const handleAddress = (data) => {\n    setShowDaumPostcode(false); // 팝업이 닫히도록 설정\n    const fullAddress = data.address;\n    const addressArray = fullAddress.split(' '); // 주소를 공백 문자를 기준으로 분리하여 배열로 만듦\n    const guAddress = addressArray[1]; // 구 단위 주소를 가져옴\n    setSelectedAddress(guAddress); // 구 단위 주소를 선택된 주소로 설정\n  };\n\n  const handleAddressInputClick = () => {\n    setShowDaumPostcode(true); // 주소 입력란 클릭 시 팝업을 띄우도록 설정\n  };\n\n  return (\n    <div>\n      <div className=\"Tab2\">\n        <div className=\"Tab2Item\"><b>일정 추가</b></div>\n\n        <div className=\"Tab2Contents\">\n          <span className=\"Tab2Text\">방문 일정을 선택하세요.</span>\n          <DatePicker\n            selected={selectedDate}\n            onChange={handleDateChange}\n            placeholderText=\"YYMMDD 형식으로 입력 (ex. 230713)\"\n            dateFormat=\"yyMMdd\"\n            className=\"Tab2Textbox\"\n          />\n        </div>\n\n        <div className=\"Tab2Item\"><b>지역 추가</b></div>\n        <span className=\"Tab2Text\">지도에서 선택 or 도로명 주소를 입력하세요.</span>\n        <input\n          type=\"text\"\n          className=\"Tab2Textbox\"\n          value={selectedAddress}\n          onChange={handleAddressChange}\n          onClick={handleAddressInputClick}\n        />\n\n        {/* Daum Postcode component */}\n        {showDaumPostcode && (\n          <DaumPostcode\n            onComplete={handleAddress}\n          />\n        )}\n\n      </div>\n    </div>\n  )\n}\n\nexport default Tab2;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}