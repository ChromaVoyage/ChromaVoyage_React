{"ast":null,"code":"var _jsxFileName = \"/Users/esthrelar/Documents/Programming/TGthon/chroma-voyage/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Nav from './components/NavBar/Nav';\nimport Main from './components/Main/Main';\nimport LoginPage from './components/LoginPage/LoginPage';\nimport Tab1 from './components/Tab1/Tab1';\nimport Tab2 from './components/Tab2/Tab2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isTab1Open, setIsTab1Open] = useState(false);\n  const [isTab2Open, setIsTab2Open] = useState(false);\n  const handleToggleTab = () => {\n    if (!isTab1Open && !isTab2Open) {\n      // If no tab is open, open Tab1\n      setIsTab1Open(true);\n    } else if (isTab1Open) {\n      // If Tab1 is open, toggle between Tab1 and Tab2\n      setIsTab1Open(!isTab1Open);\n      // setIsTab2Open(!isTab2Open);\n    } else if (isTab2Open) {\n      setIsTab2Open(false);\n    }\n    //Tab2는 버튼 조작으로 열리지 않고, Tab1 내부의 특정 동작에 의해 열림.\n  };\n\n  // Tab1에서 Tab2를 열기 위한 함수\n  const handleOpenTab2 = () => {\n    setIsTab2Open(true);\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), isTab1Open && /*#__PURE__*/_jsxDEV(Tab1, {\n          openTab2: handleOpenTab2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 24\n        }, this), isTab2Open && /*#__PURE__*/_jsxDEV(Tab2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"showTabButton\",\n          onClick: handleToggleTab,\n          children: isTab1Open ? '<' : '>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7Ujiuq9UglmfOHbZIdOMt25ucHU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Routes","Route","Nav","Main","LoginPage","Tab1","Tab2","jsxDEV","_jsxDEV","App","_s","isTab1Open","setIsTab1Open","isTab2Open","setIsTab2Open","handleToggleTab","handleOpenTab2","children","className","fileName","_jsxFileName","lineNumber","columnNumber","openTab2","onClick","path","exact","element","_c","$RefreshReg$"],"sources":["/Users/esthrelar/Documents/Programming/TGthon/chroma-voyage/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Nav from './components/NavBar/Nav';\nimport Main from './components/Main/Main';\nimport LoginPage from './components/LoginPage/LoginPage';\nimport Tab1 from './components/Tab1/Tab1';\nimport Tab2 from './components/Tab2/Tab2';\n\nfunction App() {\n  const [isTab1Open, setIsTab1Open] = useState(false);\n  const [isTab2Open, setIsTab2Open] = useState(false);\n\n  const handleToggleTab = () => {\n    if (!isTab1Open && !isTab2Open) {\n      // If no tab is open, open Tab1\n      setIsTab1Open(true);\n    } else if (isTab1Open) {\n      // If Tab1 is open, toggle between Tab1 and Tab2\n      setIsTab1Open(!isTab1Open);\n      // setIsTab2Open(!isTab2Open);\n    } else if (isTab2Open) {\n      setIsTab2Open(false);\n    }\n    //Tab2는 버튼 조작으로 열리지 않고, Tab1 내부의 특정 동작에 의해 열림.\n  };\n\n  // Tab1에서 Tab2를 열기 위한 함수\n  const handleOpenTab2 = () => {\n    setIsTab2Open(true);\n  };\n\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        {/* <Nav /> */}\n\n        <div className=\"tabContainer\">\n        <Nav />\n\n        {/* Tab Component */}\n        {isTab1Open && <Tab1 openTab2={handleOpenTab2} />}\n        {isTab2Open && <Tab2 />}\n        \n        {/* Button to show/hide the tab */}\n        <button className=\"showTabButton\" onClick={handleToggleTab}>\n          {isTab1Open ? '<' : '>'}\n        </button>\n        </div>\n        \n\n        <Routes>\n          <Route path=\"/\" exact element={<Main />}/>\n          <Route path=\"/login\" exact element={<LoginPage />}/>\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}