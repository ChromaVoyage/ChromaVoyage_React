{"ast":null,"code":"var _jsxFileName = \"/Users/esthrelar/Documents/Programming/TGthon/ChromaVoyage_React/src/components/NavBar/Nav.js\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport './Nav.css';\nimport CreategroupModal from '../modals/create-group/creategroup_modal';\nimport MypageModal from '../modals/my-page/mypage_modal';\n//JSX에서 컴포넌트 이름은 항상 대문자로 시작해야 함. (ex. CreatgroupModal / MypageModal)\n\n//로고 이미지 파일 경로\nimport logoImage from './logo.png';\nimport creategroupImage from './creategroupImage.png';\nimport userImage from './user.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Nav() {\n  _s();\n  const [isCreategroupModalOpen, setIsCreategroupModalOpen] = useState(false);\n  const [isMypageModalOpen, setIsMypageModalOpen] = useState(false);\n  const handleOpenCreategroupModal = () => {\n    setIsCreategroupModalOpen(true);\n  };\n  const handleCloseCreategroupModal = () => {\n    setIsCreategroupModalOpen(false);\n  };\n  const handleOpenMypageModal = () => {\n    setIsMypageModalOpen(true);\n  };\n  const handleCloseMypageModal = () => {\n    setIsMypageModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImage,\n        alt: \"Logo\",\n        className: \"navbarImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"navbarLine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navBottomContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: creategroupImage,\n          alt: \"CreateGroup\",\n          className: \"navbarImage\",\n          onClick: handleOpenCreategroupModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CreategroupModal, {\n          isOpen: isCreategroupModalOpen,\n          onClose: handleCloseCreategroupModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: handleOpenCreategroupModal,\n          className: \"navbarMenu\",\n          children: [\"\\uADF8\\uB8F9\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 79\n          }, this), \"\\uC0DD\\uC131\\uD558\\uAE30\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"navbarMenu\",\n          to: '/',\n          children: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"navbarMenu\",\n          to: '/login',\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"navbarLine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: userImage,\n          alt: \"User\",\n          className: \"navbarImage\",\n          onClick: handleOpenMypageModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MypageModal, {\n          isOpen: isMypageModalOpen,\n          onClose: handleCloseMypageModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Nav, \"H8pri+t/EGL0Mm/KCrTQgwi1IqI=\");\n_c = Nav;\nexport default Nav;\nvar _c;\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["Link","React","useState","CreategroupModal","MypageModal","logoImage","creategroupImage","userImage","jsxDEV","_jsxDEV","Nav","_s","isCreategroupModalOpen","setIsCreategroupModalOpen","isMypageModalOpen","setIsMypageModalOpen","handleOpenCreategroupModal","handleCloseCreategroupModal","handleOpenMypageModal","handleCloseMypageModal","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onClose","to","_c","$RefreshReg$"],"sources":["/Users/esthrelar/Documents/Programming/TGthon/ChromaVoyage_React/src/components/NavBar/Nav.js"],"sourcesContent":["import {Link} from 'react-router-dom';\nimport React, { useState } from 'react';\nimport './Nav.css';\nimport CreategroupModal from '../modals/create-group/creategroup_modal';\nimport MypageModal from '../modals/my-page/mypage_modal';\n//JSX에서 컴포넌트 이름은 항상 대문자로 시작해야 함. (ex. CreatgroupModal / MypageModal)\n\n//로고 이미지 파일 경로\nimport logoImage from './logo.png';\nimport creategroupImage from './creategroupImage.png';\nimport userImage from './user.png';\n\n\nfunction Nav() {\n  const [isCreategroupModalOpen, setIsCreategroupModalOpen] = useState(false);\n  const [isMypageModalOpen, setIsMypageModalOpen] = useState(false);\n\n  const handleOpenCreategroupModal = () => {\n    setIsCreategroupModalOpen(true);\n  };\n\n  const handleCloseCreategroupModal = () => {\n    setIsCreategroupModalOpen(false);\n  };\n\n  const handleOpenMypageModal = () => {\n    setIsMypageModalOpen(true);\n  };\n\n  const handleCloseMypageModal = () => {\n    setIsMypageModalOpen(false);\n  };\n\n  return (\n    <div className=\"navContainer\">\n      <div className=\"navbar\">\n\n        {/* 로고 이미지를 추가 */}\n        <img src={logoImage} alt=\"Logo\" className=\"navbarImage\" />\n\n        {/* 선을 추가 */}\n        <hr className=\"navbarLine\" />\n\n        <div className=\"navBottomContent\">\n          {/* 그룹 생성하기 */}\n          {/* 이미지를 클릭하면 팝업이 열리도록 이벤트를 추가 */}\n          <img src={creategroupImage} alt='CreateGroup' className=\"navbarImage\" onClick={handleOpenCreategroupModal} />\n          {/* 팝업 모달 */}\n          <CreategroupModal isOpen={isCreategroupModalOpen} onClose={handleCloseCreategroupModal} />\n          <span onClick={handleOpenCreategroupModal} className=\"navbarMenu\">그룹<br/>생성하기</span>\n\n          {/* 메뉴들 */}\n          <Link className=\"navbarMenu\" to={'/'}>Main</Link>\n          <Link className=\"navbarMenu\" to={'/login'}>Login</Link>\n\n          {/* 선을 추가 */}\n          <hr className=\"navbarLine\" />\n\n          {/* 마이페이지 */}\n          <img src={userImage} alt='User' className=\"navbarImage\" onClick={handleOpenMypageModal} />\n          <MypageModal isOpen={isMypageModalOpen} onClose={handleCloseMypageModal} />\n        </div>\n        \n      </div>\n    </div>\n  )\n}\n\nexport default Nav;"],"mappings":";;AAAA,SAAQA,IAAI,QAAO,kBAAkB;AACrC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,gBAAgB,MAAM,0CAA0C;AACvE,OAAOC,WAAW,MAAM,gCAAgC;AACxD;;AAEA;AACA,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,gBAAgB,MAAM,wBAAwB;AACrD,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACY,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMc,0BAA0B,GAAGA,CAAA,KAAM;IACvCH,yBAAyB,CAAC,IAAI,CAAC;EACjC,CAAC;EAED,MAAMI,2BAA2B,GAAGA,CAAA,KAAM;IACxCJ,yBAAyB,CAAC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMK,qBAAqB,GAAGA,CAAA,KAAM;IAClCH,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMI,sBAAsB,GAAGA,CAAA,KAAM;IACnCJ,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,oBACEN,OAAA;IAAKW,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BZ,OAAA;MAAKW,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBAGrBZ,OAAA;QAAKa,GAAG,EAAEjB,SAAU;QAACkB,GAAG,EAAC,MAAM;QAACH,SAAS,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAG1DlB,OAAA;QAAIW,SAAS,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE7BlB,OAAA;QAAKW,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAG/BZ,OAAA;UAAKa,GAAG,EAAEhB,gBAAiB;UAACiB,GAAG,EAAC,aAAa;UAACH,SAAS,EAAC,aAAa;UAACQ,OAAO,EAAEZ;QAA2B;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAE7GlB,OAAA,CAACN,gBAAgB;UAAC0B,MAAM,EAAEjB,sBAAuB;UAACkB,OAAO,EAAEb;QAA4B;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1FlB,OAAA;UAAMmB,OAAO,EAAEZ,0BAA2B;UAACI,SAAS,EAAC,YAAY;UAAAC,QAAA,GAAC,cAAE,eAAAZ,OAAA;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,4BAAI;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAGpFlB,OAAA,CAACT,IAAI;UAACoB,SAAS,EAAC,YAAY;UAACW,EAAE,EAAE,GAAI;UAAAV,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjDlB,OAAA,CAACT,IAAI;UAACoB,SAAS,EAAC,YAAY;UAACW,EAAE,EAAE,QAAS;UAAAV,QAAA,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAGvDlB,OAAA;UAAIW,SAAS,EAAC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAG7BlB,OAAA;UAAKa,GAAG,EAAEf,SAAU;UAACgB,GAAG,EAAC,MAAM;UAACH,SAAS,EAAC,aAAa;UAACQ,OAAO,EAAEV;QAAsB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1FlB,OAAA,CAACL,WAAW;UAACyB,MAAM,EAAEf,iBAAkB;UAACgB,OAAO,EAAEX;QAAuB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CArDQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAuDZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}